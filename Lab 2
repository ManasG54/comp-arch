module FSM(I,clock,reset,F);
input clock; // clock signal
input reset; // reset input
input I; // binary input
output reg F; // output of the sequence detector
parameter  s0=3'b000, // "S0" CS
s1=3'b001, // "S1" CS
s2=3'b010, // "S2" CS
s3=3'b011, // "OnceS0S1" CS
s4=3'b100;// "S4" CS
reg [2:0] CS, NS; // current CS and next CS
// sequential memory of the Moore FSM
always @(posedge clock)
begin
if(reset==1)
CS <= s0;// when reset=1, reset the CS of the FSM to "S0" CS
else
CS <= NS; // otherwise, next CS
end
// combinational logic of the Moore FSM
// to determine next CS
always @(CS,I)
begin
case(CS)
s0:begin
if(I==1)
NS = s1;
else
NS = s0;
end

s1:begin
if(I==1)
NS = s1;
else
NS = s2;
end

s2:begin
if(I==1)
NS = s1;
else
NS = s3;
end

s3:begin
if(I==1)
NS = s4;
else
NS = s0;
end

s4:begin
if(I==1)
NS = s1;
else
NS = s2;
end

default:NS = s0;
endcase
F = (CS==s4)? 1:0;
end
endmodule
